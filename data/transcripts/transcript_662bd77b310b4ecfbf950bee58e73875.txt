<Person1> Welcome to TECH INTERVIEW SIMULATION  - 당신의 기술적 여정을 들려주세요.  Today, we're diving into the impressive work of a front-end developer with experience in building robust systems for a large-scale game service.  I'm particularly interested in the illegal workshop detection system mentioned. <break time="0.1s"/> It sounds like a challenging project. </Person1>

<Person2> Yes, it was! <break time="0.1s"/> This project tackled the issue of illicit activities within the game ecosystem, specifically focusing on <emphasis>macro usage</emphasis> and large-scale operations impacting the game's economy.  Existing post-incident measures were often too late and led to player dissatisfaction due to inaccurate blocking. <break time="0.1s"/>  Our goal was to create a <emphasis>preemptive system</emphasis>. </Person2>

<Person1> I see, interesting. <break time="0.1s"/> So how did you approach building this preemptive system?  The input content mentions data mining. </Person1>

<Person2> <scratchpad>We used data mining to model user behavior, specifically character creation and login patterns. This model allowed us to identify and restrict access for suspected illegal workshops <emphasis>before</emphasis> they could disrupt the game.  We integrated this system across 33 games, including titles like MapleStory, Dungeon Fighter, and FIFA.  </scratchpad>```We used data mining to model user behavior, specifically character creation and login patterns. This model allowed us to identify and restrict access for suspected illegal workshops *before* they could disrupt the game.  We integrated this system across 33 games, including titles like <say-as interpret-as="characters">MapleStory</say-as>, <say-as interpret-as="characters">Dungeon Fighter</say-as>, and <say-as interpret-as="characters">FIFA</say-as>. </Person2>

<Person1> Got it. <break time="0.1s"/> That's quite a broad reach.  The email mentions a 700 million KRW reduction in illicit gains.  Can you elaborate on the technical aspects of the system's implementation? What technologies did you use? </Person1>

<Person2> <scratchpad>The system primarily uses TypeScript, React, Vue, Redis, MySQL, and ElasticSearch. We also utilized AWS services like EKS and S3, along with Terraform, Kubernetes, GitLab CI/CD, ArgoCD, Sentry, Grafana, and Playwright for testing and monitoring.  For the API, we created rules based on restrict conditions provided by data analysts. These rules determined access permissions to game servers. We optimized database performance by separating read-only and historical data into Redis and MySQL, respectively. This reduced API log query times significantly. Later, we migrated from MySQL to Elasticsearch and archived older data to S3 for further optimization and to aid data analysis by data engineers.  </scratchpad>```The system primarily utilizes <say-as interpret-as="characters">TypeScript</say-as>, <say-as interpret-as="characters">React</say-as>, <say-as interpret-as="characters">Vue</say-as>, <say-as interpret-as="characters">Redis</say-as>, <say-as interpret-as="characters">MySQL</say-as>, and <say-as interpret-as="characters">ElasticSearch</say-as>. We also leveraged <say-as interpret-as="characters">AWS</say-as> services like <say-as interpret-as="characters">EKS</say-as> and <say-as interpret-as="characters">S3</say-as>, along with <say-as interpret-as="characters">Terraform</say-as>, <say-as interpret-as="characters">Kubernetes</say-as>, <say-as interpret-as="characters">GitLab CI/CD</say-as>, <say-as interpret-as="characters">ArgoCD</say-as>, <say-as interpret-as="characters">Sentry</say-as>, <say-as interpret-as="characters">Grafana</say-as>, and <say-as interpret-as="characters">Playwright</say-as> for testing and monitoring.  For the <say-as interpret-as="characters">API</say-as>, we established rules based on restrict conditions provided by data analysts. These rules determined access permissions to game servers. We optimized database performance by separating read-only and historical data into <say-as interpret-as="characters">Redis</say-as> and <say-as interpret-as="characters">MySQL</say-as>, respectively.  This significantly reduced <say-as interpret-as="characters">API</say-as> log query times. Later, we migrated from <say-as interpret-as="characters">MySQL</say-as> to <say-as interpret-as="characters">Elasticsearch</say-as> and archived older data to <say-as interpret-as="characters">S3</say-as> for further optimization and easier analysis by data engineers.
</Person2>

<Person1>  That’s a comprehensive tech stack. Migrating to Elasticsearch and utilizing S3 for archiving was a smart move for scalability and data analysis. You also mention developing a front-end console. Can you tell us more about that? </Person1>

<Person2> <scratchpad>Yes, we developed a console to empower analysts and game managers to directly monitor and manage illegal workshop activity. This provided a more streamlined workflow and reduced management overhead. We also integrated Playwright for E2E testing and Sentry for error tracking, which significantly improved the stability of our development process. </scratchpad>```Yes, we developed a console to empower analysts and game managers to directly monitor and manage illegal workshop activity. This provided a more streamlined workflow and reduced management overhead.  We also integrated <say-as interpret-as="characters">Playwright</say-as> for <say-as interpret-as="characters">E2E</say-as> testing and <say-as interpret-as="characters">Sentry</say-as> for error tracking, significantly improving the stability of our development process.
</Person2>

<Person1> That’s impressive. You've clearly demonstrated a proactive and data-driven approach to tackling a complex problem. It's commendable how you not only addressed the technical challenges but also considered the user experience for the management team.  Any final thoughts you’d like to share? </Person1>

<Person2> I'm always eager to learn and contribute to challenging projects that require innovative solutions.  This project reinforced the importance of data-driven decision making and a robust, scalable system design. </Person2>


<Person1> Thank you for sharing your insights and experience with us today on TECH INTERVIEW SIMULATION.  It’s been a pleasure learning about your work.  We appreciate you tuning in, listeners!  Goodbye! </Person1>